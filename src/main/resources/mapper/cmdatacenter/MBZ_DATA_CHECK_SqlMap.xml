<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.winning.hic.dao.cmdatacenter.MbzDataCheckDao">

    <resultMap id="mbzDataCheckResultForList" type="com.winning.hic.model.MbzDataCheck">
         <result column="ID" property="id" jdbcType="VARCHAR" />
         <result column="SOURCE_TYPE" property="sourceType" jdbcType="INTEGER" />
         <result column="DATA_COUNT" property="dataCount" jdbcType="INTEGER" />
         <result column="REAL_COUNT" property="realCount" jdbcType="INTEGER" />
         <result column="ERROR_DESC" property="errorDesc" jdbcType="VARCHAR" />
        <result column="ERROR_DESC" property="errorDesc" jdbcType="INTEGER" />
        <result column="IS_AUTOMATE" property="isAutomate" jdbcType="INTEGER" />


    </resultMap>

    <resultMap id="mbzDataCheckResult" type="com.winning.hic.model.MbzDataCheck" extends="mbzDataCheckResultForList">
        <result column="SOURCE_NAME" property="map.sourceName" jdbcType="VARCHAR" />

    </resultMap>

    <sql id="sql-mbzDataCheck">
        <if test="(id != null and id != '')"> and t.ID = #{id} </if>
        <if test="(sourceType != null and sourceType != '')"> and t.SOURCE_TYPE = #{sourceType} </if>
        <if test="(dataCount != null and dataCount != '')"> and t.DATA_COUNT = #{dataCount} </if>
        <if test="(realCount != null and realCount != '')"> and t.REAL_COUNT = #{realCount} </if>
        <if test="(errorDesc != null and errorDesc != '')"> and t.ERROR_DESC = #{errorDesc} </if>
        <if test="(isAutomate != null )">and t.IS_AUTOMATE = #{isAutomate}</if>

    </sql>

    <insert id="insertMbzDataCheck" parameterType="com.winning.hic.model.MbzDataCheck">
        <selectKey resultType="String"  order="BEFORE"  keyProperty="id">SELECT CAST(NEWID() AS VARCHAR(36)) AS ID</selectKey>
        INSERT INTO MBZ_DATA_CHECK
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="(id != null and id != '')"> ID , </if>
            <if test="(sourceType != null and sourceType != '')"> SOURCE_TYPE , </if>
            <if test="(dataCount != null )"> DATA_COUNT , </if>
            <if test="(realCount != null )"> REAL_COUNT , </if>
            <if test="(errorDesc != null and errorDesc != '')"> ERROR_DESC , </if>
            <if test="(isAutomate != null )"> IS_AUTOMATE , </if>

        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="(id != null and id != '')"> #{id , jdbcType= VARCHAR },  </if>
            <if test="(sourceType != null and sourceType != '')"> #{sourceType , jdbcType= INTEGER },  </if>
            <if test="(dataCount != null )"> #{dataCount , jdbcType= INTEGER },  </if>
            <if test="(realCount != null )"> #{realCount , jdbcType= INTEGER },  </if>
            <if test="(errorDesc != null and errorDesc != '')"> #{errorDesc , jdbcType= VARCHAR },  </if>
            <if test="(isAutomate != null )"> #{isAutomate , jdbcType= INTEGER },  </if>

        </trim>
    </insert>

    <update id="updateMbzDataCheck" parameterType="com.winning.hic.model.MbzDataCheck">
        UPDATE MBZ_DATA_CHECK
        <set>
            <trim suffixOverrides=",">
                <if test="(id != null and id != '')"> ID = #{id , jdbcType= VARCHAR }, </if>
                <if test="(sourceType != null and sourceType != '')"> SOURCE_TYPE = #{sourceType , jdbcType= INTEGER }, </if>
                <if test="(dataCount != null and dataCount != '')"> DATA_COUNT = #{dataCount , jdbcType= INTEGER }, </if>
                <if test="(realCount != null and realCount != '')"> REAL_COUNT = #{realCount , jdbcType= INTEGER }, </if>
                <if test="(errorDesc != null and errorDesc != '')"> ERROR_DESC = #{errorDesc , jdbcType= VARCHAR }, </if>
                <if test="(isAutomate != null )"> IS_AUTOMATE = #{isAutomate , jdbcType= INTEGER }, </if>

            </trim>
        </set>
        <where>
            <if test="(id != null and id != '')"> and ID = #{ id, jdbcType= VARCHAR }   </if>
            <if test="(id !=null or id!='') and (map.pks != null and map.pks != '')">
                and (ID) in
                <foreach item="item" collection="map.pks" open="(" separator="," close=")"> #{item}</foreach>
            </if>
        </where>
    </update>

    <delete id="deleteMbzDataCheck" parameterType="com.winning.hic.model.MbzDataCheck">
        delete from  MBZ_DATA_CHECK
        <where> 1=1
            <if test="(id != null and id != '')"> and ID = #{ id }   </if>
            <if test="(isAutomate != null )"> and IS_AUTOMATE = #{isAutomate} </if>
            <if test="(sourceType != null and sourceType != '')"> and SOURCE_TYPE = #{sourceType}  </if>
            <if test="(id !=null or id!='') and (map.pks != null and map.pks != '')">
                and (ID) in
                <foreach item="item" collection="map.pks" open="(" separator="," close=")"> #{item}</foreach>
            </if>
        </where>
    </delete>

    <delete id="deleteMbzDataCheckList" parameterType="com.winning.hic.model.MbzDataCheck">
        delete from  MBZ_DATA_CHECK
        WHERE 1=1
        <if test="(isAutomate != null )"> AND IS_AUTOMATE = #{isAutomate} </if>
    </delete>

    <select id="selectMbzDataCheck" resultMap="mbzDataCheckResult" parameterType="com.winning.hic.model.MbzDataCheck">
        SELECT * FROM MBZ_DATA_CHECK t
        <where>
            <include refid="sql-mbzDataCheck" />
        </where>
    </select>

    <select id="selectMbzDataCheckList" resultMap="mbzDataCheckResultForList" parameterType="com.winning.hic.model.MbzDataCheck">
        SELECT
        <if test="row.count != null and row.count != ''"> top ${row.count} </if>
        * FROM MBZ_DATA_CHECK t
        <where>
            <include refid="sql-mbzDataCheck" />
        </where>
        ORDER BY t.ID ASC
    </select>

    <select id="selectMbzDataCheckCount" resultType="int" parameterType="com.winning.hic.model.MbzDataCheck">
        select count(1) from  MBZ_DATA_CHECK t
        <where>
            <include refid="sql-mbzDataCheck" />
        </where>
    </select>

    <select id="selectMbzDataCheckPageList" resultMap="mbzDataCheckResult" parameterType="com.winning.hic.model.MbzDataCheck">
        SELECT * FROM (
        SELECT t.* ,
        ROW_NUMBER() OVER ( ORDER BY t.ID DESC ) AS _RN
        FROM MBZ_DATA_CHECK t
        <where>
            <include refid="sql-mbzDataCheck" />
        </where>
        <!-- order by t.ID asc -->
        ) TEMP_TABLE WHERE _RN BETWEEN  #{row.first} + 1 AND #{row.first} + #{row.count}
    </select>

    <select id="selectMbzDataCheckHandList" resultMap="mbzDataCheckResult" parameterType="com.winning.hic.model.MbzDataCheck">
        SELECT
        t.SOURCE_TYPE,
        i.DICT_LABEL AS SOURCE_NAME,
        t.REAL_COUNT,
        t.DATA_COUNT,
        t.ERROR_DESC
        FROM
        MBZ_DATA_CHECK t
        LEFT JOIN MBZ_DICT_INFO i ON t.SOURCE_TYPE = i.DICT_VALUE
        WHERE i.DICT_CODE = 'platformTableName'
        <if test="(isAutomate != null)">and t.IS_AUTOMATE = #{isAutomate}</if>

        ORDER BY
        t.SOURCE_TYPE ASC;
    </select>


    <select id="selectMbzDataCheckHandPageList" resultMap="mbzDataCheckResult" parameterType="com.winning.hic.model.MbzDataCheck">
        SELECT * FROM (
        SELECT
        t.SOURCE_TYPE,
        i.DICT_LABEL AS SOURCE_NAME,
        t.REAL_COUNT,
        t.DATA_COUNT,
        t.ERROR_DESC,
        ROW_NUMBER() OVER ( ORDER BY t.SOURCE_TYPE ASC ) AS _RN
        FROM MBZ_DATA_CHECK t
        LEFT JOIN MBZ_DICT_INFO i ON t.SOURCE_TYPE = i.DICT_VALUE
        WHERE i.DICT_CODE = 'platformTableName'
        <if test="(isAutomate != null)">and t.IS_AUTOMATE = #{isAutomate}</if>
        <!-- order by t.ID asc -->
        ) TEMP_TABLE WHERE _RN BETWEEN  #{row.first} + 1 AND #{row.first} + #{row.count}
    </select>


</mapper>