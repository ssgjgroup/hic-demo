<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.winning.hic.dao.cmdatacenter.MbzAutomateSetDao">

    <resultMap id="mbzAutomateSetResultForList" type="com.winning.hic.model.MbzAutomateSet">
         <result column="ID" property="id" jdbcType="VARCHAR" />
         <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
         <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
         <result column="TRIGGER_NAME" property="triggerName" jdbcType="VARCHAR" />
         <result column="BATCH_DATE" property="batchDate" jdbcType="VARCHAR" />
         <result column="CRON" property="cron" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="mbzAutomateSetResult" type="com.winning.hic.model.MbzAutomateSet" extends="mbzAutomateSetResultForList">

    </resultMap>

    <sql id="sql-mbzAutomateSet">
        <if test="(id != null and id != '')"> and t.ID = #{id} </if>
        <if test="(jobName != null and jobName != '')"> and t.JOB_NAME = #{jobName} </if>
        <if test="(groupName != null and groupName != '')"> and t.GROUP_NAME = #{groupName} </if>
        <if test="(triggerName != null and triggerName != '')"> and t.TRIGGER_NAME = #{triggerName} </if>
        <if test="(batchDate != null and batchDate != '')"> and t.BATCH_DATE = #{batchDate} </if>
        <if test="(cron != null and cron != '')"> and t.CRON = #{cron} </if>
    </sql>

    <insert id="insertMbzAutomateSet" parameterType="com.winning.hic.model.MbzAutomateSet">
        <selectKey resultType="String"  order="BEFORE"  keyProperty="id">SELECT CAST(NEWID() AS VARCHAR(36)) AS ID</selectKey>
        INSERT INTO MBZ_AUTOMATE_SET
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="(id != null and id != '')"> ID , </if>
            <if test="(jobName != null and jobName != '')"> JOB_NAME , </if>
            <if test="(groupName != null and groupName != '')"> GROUP_NAME , </if>
            <if test="(triggerName != null and triggerName != '')"> TRIGGER_NAME , </if>
            <if test="(batchDate != null and batchDate != '')"> BATCH_DATE , </if>
            <if test="(cron != null and cron != '')"> CRON , </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="(id != null and id != '')"> #{id , jdbcType= VARCHAR },  </if>
            <if test="(jobName != null and jobName != '')"> #{jobName , jdbcType= VARCHAR },  </if>
            <if test="(groupName != null and groupName != '')"> #{groupName , jdbcType= VARCHAR },  </if>
            <if test="(triggerName != null and triggerName != '')"> #{triggerName , jdbcType= VARCHAR },  </if>
            <if test="(batchDate != null and batchDate != '')"> #{batchDate , jdbcType= VARCHAR },  </if>
            <if test="(cron != null and cron != '')"> #{cron , jdbcType= VARCHAR },  </if>
        </trim>
    </insert>

    <update id="updateMbzAutomateSet" parameterType="com.winning.hic.model.MbzAutomateSet">
        UPDATE MBZ_AUTOMATE_SET
        <set>
            <trim suffixOverrides=",">
                <if test="(id != null and id != '')"> ID = #{id , jdbcType= VARCHAR }, </if>
                <if test="(jobName != null and jobName != '')"> JOB_NAME = #{jobName , jdbcType= VARCHAR }, </if>
                <if test="(groupName != null and groupName != '')"> GROUP_NAME = #{groupName , jdbcType= VARCHAR }, </if>
                <if test="(triggerName != null and triggerName != '')"> TRIGGER_NAME = #{triggerName , jdbcType= VARCHAR }, </if>
                <if test="(batchDate != null and batchDate != '')"> BATCH_DATE = #{batchDate , jdbcType= VARCHAR }, </if>
                <if test="(cron != null and cron != '')"> CRON = #{cron , jdbcType= VARCHAR }, </if>
            </trim>
        </set>
        <where>
            <if test="(id != null and id != '')"> and ID = #{ id, jdbcType= VARCHAR }   </if>
            <if test="(id !=null or id!='') and (map.pks != null and map.size > 0)">
                and (ID) in
                <foreach item="item" collection="map.pks" open="(" separator="," close=")"> #{item}</foreach>
            </if>
        </where>
    </update>

    <delete id="deleteMbzAutomateSet" parameterType="com.winning.hic.model.MbzAutomateSet">
        delete from  MBZ_AUTOMATE_SET
        <where>
            <if test="(id != null and id != '')"> and ID = #{ id }   </if>
            <if test="(id !=null or id!='') and (map.pks != null and map.size > 0)">
                and (ID) in
                <foreach item="item" collection="map.pks" open="(" separator="," close=")"> #{item}</foreach>
            </if>
        </where>
    </delete>


    <select id="selectMbzAutomateSet" resultMap="mbzAutomateSetResult" parameterType="com.winning.hic.model.MbzAutomateSet">
        SELECT * FROM MBZ_AUTOMATE_SET t
        <where>
            <include refid="sql-mbzAutomateSet" />
        </where>
    </select>

    <select id="selectMbzAutomateSetList" resultMap="mbzAutomateSetResultForList" parameterType="com.winning.hic.model.MbzAutomateSet">
        SELECT
        <if test="row.count != null and row.count != ''"> top ${row.count} </if>
        * FROM MBZ_AUTOMATE_SET t
        <where>
            <include refid="sql-mbzAutomateSet" />
        </where>
        ORDER BY t.ID ASC
    </select>

    <select id="selectMbzAutomateSetCount" resultType="int" parameterType="com.winning.hic.model.MbzAutomateSet">
        select count(1) from  MBZ_AUTOMATE_SET t
        <where>
            <include refid="sql-mbzAutomateSet" />
        </where>
    </select>

    <select id="selectMbzAutomateSetPageList" resultMap="mbzAutomateSetResult" parameterType="com.winning.hic.model.MbzAutomateSet">
        SELECT * FROM (
        SELECT t.* ,
        ROW_NUMBER() OVER ( ORDER BY t.ID DESC ) AS _RN
        FROM MBZ_AUTOMATE_SET t
        <where>
            <include refid="sql-mbzAutomateSet" />
        </where>
        <!-- order by t.ID asc -->
        ) TEMP_TABLE WHERE _RN BETWEEN  #{row.first} + 1 AND #{row.first} + #{row.count}
    </select>


</mapper>